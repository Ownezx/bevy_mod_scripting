{% if args.self_is_bms_lua %}
{% set bms_lua_path="crate" %}
{% else %}
{% set bms_lua_path="bevy_mod_scripting::lua"%}
{% endif %}


pub struct {{ "ScriptingPlugin" | prefix_cratename | convert_case(case="upper_camel")}};

impl bevy::app::Plugin for {{ "ScriptingPlugin" | prefix_cratename | convert_case(case="upper_camel")}} {
    fn build(&self, app: &mut bevy::prelude::App) {
        let mut world = app.world_mut();

        {% for item in items %}
        NamespaceBuilder::<::{{ item.import_path }}>::new(world)
        {%- for function in item.functions -%}
            .overwrite_script_function("{{ function.ident }}", |
            {%- for arg in function.args -%}
                {%- if arg.ident != "self" -%}
                    {{- arg.ident -}}
                {%- else -%}
                    _{{- arg.ident -}}
                {%- endif -%} 
            : {{- arg.proxy_ty -}},
            {%- endfor -%}
            | {
                let output: {{ function.output.proxy_ty }} = ::{{ item.import_path }}::{{ function.ident }}(
                    {%- for arg in function.args -%}
                        {%- if arg.ident != "self" -%}
                            {{- arg.ident -}}
                        {%- else -%}
                            _{{- arg.ident -}}
                        {%- endif -%}.into(), 
                    {%- endfor -%}
                ).into();
                output
            })
        {%- endfor -%};     
        {% endfor %}
    }
}