#![allow(clippy::all)]
#![allow(unused, deprecated, dead_code)]
#![cfg_attr(rustfmt, rustfmt_skip)]

{% for crate in dependencies %}
{% if crate != crate_name %}
use super::{{crate}}::*;
{% endif %}
{% endfor %}


use bevy_mod_scripting_core::{AddContextInitializer, StoreDocumentation, bindings::ReflectReference};

{% if args.self_is_bms_lua %}
use crate::{bindings::proxy::{LuaReflectRefProxy,LuaReflectRefMutProxy,LuaReflectValProxy,LuaValProxy,LuaIdentityProxy},type_data::RegisterLua, tealr::mlu::mlua::IntoLua};
{% else %}
use bevy_mod_scripting::{lua::bindings::proxy::{LuaReflectRefProxy,LuaReflectRefMutProxy,LuaReflectValProxy,LuaValProxy,LuaIdentityProxy}, type_data::RegisterLua,  tealr::mlu::mlua::IntoLua};
{% endif %}